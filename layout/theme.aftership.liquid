{% comment %}
  *****************************************************************************************************************************
  *****************************************************************************************************************************
  **																														   **
  **   This file is auto-generated by AfterShip Page Builder.                                                               **
  **   The content can be overridden when publish again in Page Builder.  Please do not edit this file directly.             **
  **   If you plan to remove the page, please follow the guide in our help center:                                           **
  **   https://support-page-builder.automizely.com/en/article/how-to-uninstall-automizely-page-builder-like-a-pro-3e06qn/    **
  **   version: v1.1.0-0e19bf886729																						   **
  **																														   **
  *****************************************************************************************************************************
  *****************************************************************************************************************************
{% endcomment %}
<!doctype html>
<html class="no-js" lang="{{ shop.locale }}" fontify-lang="{{ shop.locale }}">
  <head>
    <!-- Showcase 4.1.0 -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="preload" href="{{ 'styles.css' | asset_url }}" as="style">
    <link rel="preload" href="{{ 'custom-styles.css' | asset_url }}" as="style">

    {% comment %} <link rel="stylesheet" type="text/css" href="slick/slick.css"/> {% endcomment %}
    {% comment %} Add the new slick-theme.css if you want the default styling {% endcomment %}
    <link rel="stylesheet" type="text/css" href="{{ 'slick.css' | asset_url }}">

    {% render 'head-tag' %}
    {%- assign base_font = settings.type_base_font -%}
    {%- assign base_font_medium = base_font | font_modify: 'weight', '500' -%}
    {%- assign base_font_semibold = base_font | font_modify: 'weight', '600' -%}
    {%- if base_font_medium -%}
      <link rel="preload" as="font" href="{{ base_font_medium | font_url }}" type="font/woff2" crossorigin>
    {%- endif -%}
    {%- if base_font_semibold -%}
      <link rel="preload" as="font" href="{{ base_font_semibold | font_url }}" type="font/woff2" crossorigin>
    {%- endif -%}

    <meta name="theme-color" content="{{ settings.col_btn_bg }}">

    <title>
      {{ page_title }}
      {% if current_tags -%}
        {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
      {%- endif %}
      {% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
    </title>

    {% render 'social-meta-tags' %}

    {{ 'styles.css' | asset_url | stylesheet_tag }}
    {{ 'custom-styles.css' | asset_url | stylesheet_tag }}

    {{ content_for_header }}
    {{ shop.metafields.fontify.stylesheets }}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', '');
      window.theme = window.theme || {};
      theme.money_format = {{ shop.money_format | json }};
      theme.money_container = '.theme-money';
      theme.strings = {
        previous: {{ 'general.accessibility_labels.previous' | t | json }},
        next: {{ 'general.accessibility_labels.next' | t | json }},
        close: {{ 'general.accessibility_labels.close' | t | json }},
        addressError: {{ 'map.errors.address_error' | t | json }},
        addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
        addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
        authError: {{ 'map.errors.auth_error' | t | json }},
        back: {{ 'layout.navigation.back' | t | json }},
        cartConfirmation: {{ 'cart.terms.confirmation' | t | json }},
        loadMore: {{ 'general.accessibility_labels.load_more' | t | json }},
        infiniteScrollNoMore: {{ 'collections.general.infinite_scroll_no_more' | t | json }},
        priceNonExistent: {{ 'products.variant.non_existent' | t | json }},
        buttonDefault: {{ 'products.product.add_to_cart' | t | json }},
        buttonNoStock: {{ 'products.variant.out_of_stock' | t | json }},
        buttonNoVariant: {{ 'products.variant.non_existent' | t | json }},
        variantNoStock: {{ 'products.variant.no_stock' | t | json }},
        unitPriceSeparator: {{ 'products.product.unit_price_separator' | t | json }},
        colorBoxPrevious: {{ 'general.lightbox.previous' | t | json }},
        colorBoxNext: {{ 'general.lightbox.next' | t | json }},
        colorBoxClose: {{ 'general.lightbox.close' | t | json }},
        navigateHome: {{ 'layout.navigation.home' | t | json }},
        productAddingToCart: {{ 'products.product.adding_to_cart' | t | json }},
        productAddedToCart: {{ 'products.product.added_to_cart' | t | json }},
        popupWasAdded: {{ 'products.product.popup_was_added' | t | json }},
        popupCheckout: {{ 'products.product.popup_checkout' | t | json }},
        popupContinueShopping: {{ 'products.product.popup_continue_shopping' | t | json }},
        onlyXLeft: {{ 'products.labels.only_x_left' | t: quantity: '[[ quantity ]]' | json }},
        priceSoldOut: {{ 'products.labels.sold_out' | t | json }},
        loading: {{ 'products.listing.loading' | t | json }},
        viewCart: {{ 'layout.cart_summary.cart' | t | json }},
        page: {{ 'general.meta.page' | t | json }},
        imageSlider: {{ 'general.slider.images' | t | json }},
        clearAll: {{ 'collections.filtering.clear_all' | t | json }}
      };
      theme.routes = {
        search_url: '{{ routes.search_url }}',
        cart_url: '{{ routes.cart_url }}',
        cart_add_url: '{{ routes.cart_add_url }}',
        checkout: '/checkout'
      };
      theme.settings = {
        productImageParallax: {{ settings.animation_parallax_prod_image | json }},
        animationEnabledDesktop: {{ settings.animation_enabled_desktop | json }},
        animationEnabledMobile: {{ settings.animation_enabled_mobile | json }}
      };

      theme.checkViewportFillers = function(){
        var toggleState = false;
        var elPageContent = document.getElementById('page-content');
        if(elPageContent) {
          var elOverlapSection = elPageContent.querySelector('.header-overlap-section');
          if (elOverlapSection) {
            var padding = parseInt(getComputedStyle(elPageContent).getPropertyValue('padding-top'));
            toggleState = ((Math.round(elOverlapSection.offsetTop) - padding) === 0);
          }
        }
        if(toggleState) {
          document.getElementsByTagName('body')[0].classList.add('header-section-overlap');
        } else {
          document.getElementsByTagName('body')[0].classList.remove('header-section-overlap');
        }
      };

      theme.assessAltLogo = function(){
        var elsOverlappers = document.querySelectorAll('.needs-alt-logo');
        var useAltLogo = false;
        if(elsOverlappers.length) {
          var elSiteControl = document.querySelector('#site-control');
          var elSiteControlInner = document.querySelector('#site-control .site-control__inner');
          var headerMid = elSiteControlInner.offsetTop + elSiteControl.offsetTop + elSiteControlInner.offsetHeight / 2;
          Array.prototype.forEach.call(elsOverlappers, function(el, i){
            var thisTop = el.getBoundingClientRect().top;
            var thisBottom = thisTop + el.offsetHeight;
            if(headerMid > thisTop && headerMid < thisBottom) {
              useAltLogo = true;
              return false;
            }
          });
        }
        if(useAltLogo) {
          document.getElementsByTagName('body')[0].classList.add('use-alt-logo');
        } else {
          document.getElementsByTagName('body')[0].classList.remove('use-alt-logo');
        }
      };
    </script>
    <meta name="google-site-verification" content="NVDj5dEMglMw9cnEiCo1ZL4s4rOwvNgS3fLCFwgpdHE">

    <meta name="facebook-domain-verification" content="h0gzrbyvrtcn97khs1huu450m5d26w">

    {% render 'ot-cookies' %}

    <link rel="stylesheet" href="{{ 'lightbox.min.css' | asset_url }}" type="text/css" media="all">
    <script defer src="{{ 'lightbox.min.js' | asset_url }}" type="text/javascript"></script>

    <link rel="stylesheet" href="{{ 'fancybox.min.css' | asset_url }}" type="text/css" media="all">
    <script defer src="{{ 'fancybox.min.js' | asset_url }}" type="text/javascript"></script>
  </head>

  <body
    id="page-{{ page_title | handle }}"
    class="page-{{ page_title | handle }} {% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if template.suffix != blank %} template-suffix-{{ template.suffix }}{% endif %}{% if template contains 'customers' %} template-customer-area{% endif %}{% if logo_html contains 'img' %} has-logo{% endif %}"
  >
    <div class="page-builder-container">{{ content_for_layout }}</div>
  </body>
</html>
